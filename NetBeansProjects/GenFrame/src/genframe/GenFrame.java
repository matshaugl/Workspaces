package genframe;

import java.awt.Color;
import java.awt.Image;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Mats
 */
public class GenFrame extends javax.swing.JFrame {

    double v0 = 1, v1 = 1, v2 = 1, v3 = 1, v4 = 1, v5 = 1, v6 = 1, v7 = 1, v8 = 1, v9 = 1;
    int size = 900;
    Image img;
    double waterLevel;
    BufferedImage bi;
    double dirtMap[][];
    int[] color;
    double dirtMapArray[][][];

    /**
     * Creates new form GenFrame
     */
    public GenFrame() {
        initComponents();
        initMap();
        initComponentValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mapPanel = new javax.swing.JPanel();
        mapLabel = new javax.swing.JLabel();
        sidePanel = new javax.swing.JPanel();
        addWaterLevel = new javax.swing.JButton();
        subWaterLevel = new javax.swing.JButton();
        jSlider0 = new javax.swing.JSlider();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jSlider3 = new javax.swing.JSlider();
        jSlider4 = new javax.swing.JSlider();
        jSlider5 = new javax.swing.JSlider();
        jSlider6 = new javax.swing.JSlider();
        jSlider7 = new javax.swing.JSlider();
        jSlider8 = new javax.swing.JSlider();
        jSlider9 = new javax.swing.JSlider();
        blendButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mapLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mapLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        addWaterLevel.setText("+");
        addWaterLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWaterLevelActionPerformed(evt);
            }
        });

        subWaterLevel.setText("-");
        subWaterLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subWaterLevelActionPerformed(evt);
            }
        });

        blendButton.setText("Blend");
        blendButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                blendButtonMouseClicked(evt);
            }
        });
        blendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blendButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Water Level");

        jLabel2.setText("Array Blend Level");

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subWaterLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addWaterLevel)
                    .addComponent(jSlider0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blendButton)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(147, Short.MAX_VALUE))
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addWaterLevel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subWaterLevel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSlider0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(blendButton)
                .addContainerGap(463, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(mapPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(325, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mapPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sidePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addWaterLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWaterLevelActionPerformed
        waterLevel = waterLevel - 0.02;
        updateMap();
    }//GEN-LAST:event_addWaterLevelActionPerformed

    private void subWaterLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subWaterLevelActionPerformed
        waterLevel = waterLevel + 0.02;
        updateMap();
    }//GEN-LAST:event_subWaterLevelActionPerformed

    private void blendButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blendButtonMouseClicked
        blend();
    }//GEN-LAST:event_blendButtonMouseClicked

    private void blendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blendButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blendButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenFrame().setVisible(true);
            }
        });
    }

    public void initMap() {
        waterLevel = 0.0;
        dirtMapArray = new double[size][size][10];
        color = new int[size * size];

        Random r = new Random();
        double random = r.nextDouble();
        double xin = 2.0;

        dirtMap = new double[size][size];
        for (int z = 0; z < 10; z++) {
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    //dirtMap[i][j] = SimplexNoise.noise(i / xin + random, j / xin + random);
                    dirtMapArray[i][j][z] = SimplexNoise.noise(i / xin + random, j / xin + random);

                }
            }
            xin = xin * 2.0;
        }



        updateMap();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addWaterLevel;
    private javax.swing.JButton blendButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSlider jSlider0;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JSlider jSlider4;
    private javax.swing.JSlider jSlider5;
    private javax.swing.JSlider jSlider6;
    private javax.swing.JSlider jSlider7;
    private javax.swing.JSlider jSlider8;
    private javax.swing.JSlider jSlider9;
    private javax.swing.JLabel mapLabel;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JButton subWaterLevel;
    // End of variables declaration//GEN-END:variables

    private void updateMap() {
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                dirtMap[i][j] =
                        (dirtMapArray[i][j][0] * v0
                        + dirtMapArray[i][j][1] * v1
                        + dirtMapArray[i][j][2] * v2
                        + dirtMapArray[i][j][3] * v3
                        + dirtMapArray[i][j][4] * v4
                        + dirtMapArray[i][j][5] * v5
                        + dirtMapArray[i][j][6] * v6
                        + dirtMapArray[i][j][7] * v7
                        + dirtMapArray[i][j][8] * v8
                        + dirtMapArray[i][j][9] * v9) / (v0 + v1 + v2 + v3 + v4 + v5 + v6 + v7 + v8 + v9);
            }
        }

        bi = new BufferedImage(size, size, BufferedImage.TYPE_INT_ARGB);

        int count = 0;
        for (int y = 0; y < size; y++) {
            for (int x = 0; x < size; x++) {

                if (dirtMap[x][y] > waterLevel) {
                    color[count++] = (int) (-13404200 - (dirtMap[x][y] * 100));
                } else if (dirtMap[x][y] < waterLevel - 0.3) {
                    color[count++] = Color.WHITE.getRGB();
                } else {
                    color[count++] = -77486792;
                }
            }
        }

        bi = new BufferedImage(size, size, BufferedImage.TYPE_INT_RGB);
        bi.setRGB(0, 0, size, size, color, 0, size);
        //img = bi.getScaledInstance(900, 900, 0);
        img = bi.getSubimage(0, 0, 900, 900);
        mapLabel.setIcon(new ImageIcon(img));
    }

    private void initComponentValue() {
        jSlider0.setValue(10);
        jSlider1.setValue(20);
        jSlider2.setValue(30);
        jSlider3.setValue(40);
        jSlider4.setValue(50);
        jSlider5.setValue(60);
        jSlider6.setValue(70);
        jSlider7.setValue(80);
        jSlider8.setValue(90);
        jSlider9.setValue(80);
        blend();
        jSlider0.setMaximum(100);
        jSlider1.setMaximum(100);
        jSlider2.setMaximum(100);
        jSlider3.setMaximum(100);
        jSlider4.setMaximum(100);
        jSlider5.setMaximum(100);
        jSlider6.setMaximum(100);
        jSlider7.setMaximum(100);
        jSlider8.setMaximum(100);
        jSlider9.setMaximum(100);
    }
    
    private void blend(){
        v0 = jSlider0.getValue();
        v1 = jSlider1.getValue();
        v2 = jSlider2.getValue();
        v3 = jSlider3.getValue();
        v4 = jSlider4.getValue();
        v5 = jSlider5.getValue();
        v6 = jSlider6.getValue();
        v7 = jSlider7.getValue();
        v8 = jSlider8.getValue();
        v9 = jSlider9.getValue();
        updateMap();
    }
}
